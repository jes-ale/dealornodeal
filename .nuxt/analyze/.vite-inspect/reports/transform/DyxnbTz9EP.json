{
  "resolvedId": "/home/jes/dealornodeal_web/components/Blocks/InternalUsers.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<!-- components/ConnectedUsersWidget.vue -->\n<template>\n    <div class=\"px-4 py-1 border border-neutral-900 ml-2\">\n        <p> Usuarios: {{ connectedUsers }}</p>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { usePocketBase } from '@/composables/usePocketBase'\n\nconst { pb } = usePocketBase();\nconst connectedUsers = ref(0);\n\nconst updateConnectedUsers = async () => {\n    try {\n        const users = await pb.collection('external_users').getFullList({\n            filter: 'is_connected=true'\n        });\n        connectedUsers.value = users.length;\n    } catch (error) {\n        console.error('Failed to fetch connected users:', error);\n    }\n};\n\nonMounted(() => {\n    updateConnectedUsers();\n    const intervalId = setInterval(updateConnectedUsers, 5000); // Update every 5 seconds\n\n    onUnmounted(() => {\n        clearInterval(intervalId);\n    });\n});\n</script>\n",
      "start": 1727667730507,
      "end": 1727667730694,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727667730694,
      "end": 1727667730694,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"px-4 py-1 border border-neutral-900 ml-2\" }\n\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { usePocketBase } from '@/composables/usePocketBase'\n\n\nconst _sfc_main = {\n  __name: 'InternalUsers',\n  setup(__props) {\n\nconst { pb } = usePocketBase();\nconst connectedUsers = ref(0);\n\nconst updateConnectedUsers = async () => {\n    try {\n        const users = await pb.collection('external_users').getFullList({\n            filter: 'is_connected=true'\n        });\n        connectedUsers.value = users.length;\n    } catch (error) {\n        console.error('Failed to fetch connected users:', error);\n    }\n};\n\nonMounted(() => {\n    updateConnectedUsers();\n    const intervalId = setInterval(updateConnectedUsers, 5000); // Update every 5 seconds\n\n    onUnmounted(() => {\n        clearInterval(intervalId);\n    });\n});\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"p\", null, \" Usuarios: \" + _toDisplayString(connectedUsers.value), 1)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1727667730694,
      "end": 1727667730695,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { setInterval } from '#app/compat/interval';\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"px-4 py-1 border border-neutral-900 ml-2\" }\n\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { usePocketBase } from '@/composables/usePocketBase'\n\n\nconst _sfc_main = {\n  __name: 'InternalUsers',\n  setup(__props) {\n\nconst { pb } = usePocketBase();\nconst connectedUsers = ref(0);\n\nconst updateConnectedUsers = async () => {\n    try {\n        const users = await pb.collection('external_users').getFullList({\n            filter: 'is_connected=true'\n        });\n        connectedUsers.value = users.length;\n    } catch (error) {\n        console.error('Failed to fetch connected users:', error);\n    }\n};\n\nonMounted(() => {\n    updateConnectedUsers();\n    const intervalId = setInterval(updateConnectedUsers, 5000); // Update every 5 seconds\n\n    onUnmounted(() => {\n        clearInterval(intervalId);\n    });\n});\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"p\", null, \" Usuarios: \" + _toDisplayString(connectedUsers.value), 1)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxK;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D;AACA;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClh
      }
    },
    {
      "name": "unctx:transform",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727667730695,
      "end": 1727667730695,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727667730695,
      "end": 1727667730696,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727667730696,
      "end": 1727667730696,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727667730696,
      "end": 1727667730696,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727667730696,
      "end": 1727667730696,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727667730696,
      "end": 1727667730696,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727667730696,
      "end": 1727667730696,
      "order": "normal"
    }
  ]
}
