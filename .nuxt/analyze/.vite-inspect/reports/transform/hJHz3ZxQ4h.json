{
  "resolvedId": "/home/jes/dealornodeal_web/pages/user/form/[id].vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full h-full flex items-center justify-center\" }\n\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport FormView from '~/components/Views/FormView.vue';\nimport Header from '~/components/Blocks/Header.vue';\nimport ActionButton from '~/components/Blocks/ActionButton.vue';\nimport { usePocketBase } from '~/composables/usePocketBase'; // Assuming this is where you import PocketBase\nimport { EventBus } from '~/event-bus.ts'; // Assuming this is your event bus setup\n\ninterface Field {\n  name: string;\n  label: string;\n  type: string;\n  options?: string[];\n  readonly?: boolean;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: '[id]',\n  props: {\n  id: {\n    type: String,\n    required: false,\n  },\n},\n  setup(__props) {\n\nconst props = __props\n\n\nconst fields: Field[] = [\n  { name: 'username', label: 'Username', type: 'text' },\n  { name: 'verified', label: 'Verified', type: 'boolean' },\n  { name: 'email', label: 'Email', type: 'text' },\n  { name: 'created', label: 'Created', type: 'date', readonly: true },\n  { name: 'updated', label: 'Updated', type: 'date', readonly: true },\n  { name: 'avatar', label: 'Avatar', type: 'text' },\n  { name: 'roles', label: 'Roles', type: 'selection', options: ['admin', 'user', 'guest'] },\n  { name: 'contact_fk', label: 'Contact', type: 'many2one' },\n  { name: 'company_id', label: 'Company', type: 'many2one' },\n];\n\nconst initialData = ref<Record<string, any>>();\nconst route = useRoute();\nconst router = useRouter();\nconst userId = computed(() => route.params.id as string | undefined);\n\nconst formTitle = computed(() => (userId.value ? 'Update User' : 'Create User'));\n\nconst { pb } = usePocketBase(); // Initialize your PocketBase instance\n\nconst fetchUserData = async () => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      const user = await pb.collection('internal_users').getOne(userId.value);\n      console.log('user', user);\n      initialData.value = user;\n    }\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nonMounted(() => {\n  fetchUserData();\n});\n\nconst handleFormSubmit = async (formData: Record<string, any>) => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').update(userId.value, formData);\n    } else {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').create(formData);\n    }\n    router.push('/user/list'); // Redirect to user list or appropriate page\n  } catch (error) {\n    console.error('Error submitting form:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nconst handleCancel = () => {\n  console.log('Cancel clicked');\n  router.back(); // Navigate back to the previous page\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_NuxtLayout, { name: \"default\" }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(FormView, {\n            title: formTitle.value,\n            fields: fields,\n            initialData: initialData.value,\n            collectionName: \"internal_users\",\n            onSubmit: handleFormSubmit\n          }, {\n            buttons: _withCtx(() => [\n              _createVNode(ActionButton, {\n                type: \"button\",\n                icon: \"fluent:password-reset-48-filled\",\n                label: \"Psswd\",\n                onClick: handleCancel\n              }),\n              _createVNode(ActionButton, {\n                type: \"button\",\n                icon: \"mdi:cloud-refresh\",\n                label: \"Fetch\",\n                onClick: fetchUserData\n              })\n            ]),\n            _: 1\n          }, 8, [\"title\", \"initialData\"])\n        ])\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})",
      "start": 1728383049642,
      "end": 1728383049642
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1728383049642,
      "end": 1728383049642,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"w-full h-full flex items-center justify-center\" };\nimport { ref, computed, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport FormView from \"~/components/Views/FormView.vue\";\nimport ActionButton from \"~/components/Blocks/ActionButton.vue\";\nimport { usePocketBase } from \"~/composables/usePocketBase\";\nimport { EventBus } from \"~/event-bus.ts\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"[id]\",\n  props: {\n    id: {\n      type: String,\n      required: false\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const fields = [\n      { name: \"username\", label: \"Username\", type: \"text\" },\n      { name: \"verified\", label: \"Verified\", type: \"boolean\" },\n      { name: \"email\", label: \"Email\", type: \"text\" },\n      { name: \"created\", label: \"Created\", type: \"date\", readonly: true },\n      { name: \"updated\", label: \"Updated\", type: \"date\", readonly: true },\n      { name: \"avatar\", label: \"Avatar\", type: \"text\" },\n      { name: \"roles\", label: \"Roles\", type: \"selection\", options: [\"admin\", \"user\", \"guest\"] },\n      { name: \"contact_fk\", label: \"Contact\", type: \"many2one\" },\n      { name: \"company_id\", label: \"Company\", type: \"many2one\" }\n    ];\n    const initialData = ref();\n    const route = useRoute();\n    const router = useRouter();\n    const userId = computed(() => route.params.id);\n    const formTitle = computed(() => userId.value ? \"Update User\" : \"Create User\");\n    const { pb } = usePocketBase();\n    const fetchUserData = async () => {\n      try {\n        if (userId.value) {\n          EventBus.emit(\"loading\", { show: true });\n          const user = await pb.collection(\"internal_users\").getOne(userId.value);\n          console.log(\"user\", user);\n          initialData.value = user;\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        EventBus.emit(\"loading\", { show: false });\n      }\n    };\n    onMounted(() => {\n      fetchUserData();\n    });\n    const handleFormSubmit = async (formData) => {\n      try {\n        if (userId.value) {\n          EventBus.emit(\"loading\", { show: true });\n          await pb.collection(\"internal_users\").update(userId.value, formData);\n        } else {\n          EventBus.emit(\"loading\", { show: true });\n          await pb.collection(\"internal_users\").create(formData);\n        }\n        router.push(\"/user/list\");\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n      } finally {\n        EventBus.emit(\"loading\", { show: false });\n      }\n    };\n    const handleCancel = () => {\n      console.log(\"Cancel clicked\");\n      router.back();\n    };\n    return (_ctx, _cache) => {\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      return _openBlock(), _createElementBlock(\"div\", null, [\n        _createVNode(_component_NuxtLayout, { name: \"default\" }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_1, [\n              _createVNode(FormView, {\n                title: formTitle.value,\n                fields,\n                initialData: initialData.value,\n                collectionName: \"internal_users\",\n                onSubmit: handleFormSubmit\n              }, {\n                buttons: _withCtx(() => [\n                  _createVNode(ActionButton, {\n                    type: \"button\",\n                    icon: \"fluent:password-reset-48-filled\",\n                    label: \"Psswd\",\n                    onClick: handleCancel\n                  }),\n                  _createVNode(ActionButton, {\n                    type: \"button\",\n                    icon: \"mdi:cloud-refresh\",\n                    label: \"Fetch\",\n                    onClick: fetchUserData\n                  })\n                ]),\n                _: 1\n              }, 8, [\"title\", \"initialData\"])\n            ])\n          ]),\n          _: 1\n        })\n      ]);\n    };\n  }\n});\n",
      "start": 1728383049642,
      "end": 1728383049761,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/jes/dealornodeal_web/pages/user/form/[id].vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full h-full flex items-center justify-center\" }\n\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport FormView from '~/components/Views/FormView.vue';\nimport Header from '~/components/Blocks/Header.vue';\nimport ActionButton from '~/components/Blocks/ActionButton.vue';\nimport { usePocketBase } from '~/composables/usePocketBase'; // Assuming this is where you import PocketBase\nimport { EventBus } from '~/event-bus.ts'; // Assuming this is your event bus setup\n\ninterface Field {\n  name: string;\n  label: string;\n  type: string;\n  options?: string[];\n  readonly?: boolean;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: '[id]',\n  props: {\n  id: {\n    type: String,\n    required: false,\n  },\n},\n  setup(__props) {\n\nconst props = __props\n\n\nconst fields: Field[] = [\n  { name: 'username', label: 'Username', type: 'text' },\n  { name: 'verified', label: 'Verified', type: 'boolean' },\n  { name: 'email', label: 'Email', type: 'text' },\n  { name: 'created', label: 'Created', type: 'date', readonly: true },\n  { name: 'updated', label: 'Updated', type: 'date', readonly: true },\n  { name: 'avatar', label: 'Avatar', type: 'text' },\n  { name: 'roles', label: 'Roles', type: 'selection', options: ['admin', 'user', 'guest'] },\n  { name: 'contact_fk', label: 'Contact', type: 'many2one' },\n  { name: 'company_id', label: 'Company', type: 'many2one' },\n];\n\nconst initialData = ref<Record<string, any>>();\nconst route = useRoute();\nconst router = useRouter();\nconst userId = computed(() => route.params.id as string | undefined);\n\nconst formTitle = computed(() => (userId.value ? 'Update User' : 'Create User'));\n\nconst { pb } = usePocketBase(); // Initialize your PocketBase instance\n\nconst fetchUserData = async () => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      const user = await pb.collection('internal_users').getOne(userId.value);\n      console.log('user', user);\n      initialData.value = user;\n    }\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nonMounted(() => {\n  fetchUserData();\n});\n\nconst handleFormSubmit = async (formData: Record<string, any>) => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').update(userId.value, formData);\n    } else {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').create(formData);\n    }\n    router.push('/user/list'); // Redirect to user list or appropriate page\n  } catch (error) {\n    console.error('Error submitting form:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nconst handleCancel = () => {\n  console.log('Cancel clicked');\n  router.back(); // Navigate back to the previous page\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_NuxtLayout, { name: \"default\" }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(FormView, {\n            title: formTitle.value,\n            fields: fields,\n            initialData: initialData.value,\n            collectionName: \"internal_users\",\n            onSubmit: handleFormSubmit\n          }, {\n            buttons: _withCtx(() => [\n              _createVNode(ActionButton, {\n                type: \"button\",\n                icon: \"fluent:password-reset-48-filled\",\n                label: \"Psswd\",\n                onClick: handleCancel\n              }),\n              _createVNode(ActionButton, {\n                type: \"button\",\n                icon: \"mdi:cloud-refresh\",\n                label: \"Fetch\",\n                onClick: fetchUserData\n              })\n            ]),\n            _: 1\n          }, 8, [\"title\", \"initialData\"])\n        ])\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1728383049761,
      "end": 1728383049761,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1728383049761,
      "end": 1728383049761,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1728383049762,
      "end": 1728383049762,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1728383049762,
      "end": 1728383049762,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1728383049762,
      "end": 1728383049762,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1728383049762,
      "end": 1728383049762,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1728383049762,
      "end": 1728383049762,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1728383049763,
      "end": 1728383049763,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1728383049763,
      "end": 1728383049763,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1728383049763,
      "end": 1728383049763,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1728383049763,
      "end": 1728383049763,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1728383049763,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1728383049764,
      "end": 1728383049764,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1728383049765,
      "end": 1728383049765,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1728383049765,
      "end": 1728383049765,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1728383049766,
      "end": 1728383049766,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1728383049766,
      "end": 1728383049774,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1728383049775,
      "end": 1728383049775,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1728383049778,
      "end": 1728383049778,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1728383049781,
      "end": 1728383049781,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1728383049781,
      "end": 1728383049781,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/home/jes/dealornodeal_web/node_modules/nuxt/dist/app/components/nuxt-layout\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = { class: \"w-full h-full flex items-center justify-center\" };\nimport { ref, computed, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport FormView from \"~/components/Views/FormView.vue\";\nimport ActionButton from \"~/components/Blocks/ActionButton.vue\";\nimport { usePocketBase } from \"~/composables/usePocketBase\";\nimport { EventBus } from \"~/event-bus.ts\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"[id]\",\n  props: {\n    id: {\n      type: String,\n      required: false\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const fields = [\n      { name: \"username\", label: \"Username\", type: \"text\" },\n      { name: \"verified\", label: \"Verified\", type: \"boolean\" },\n      { name: \"email\", label: \"Email\", type: \"text\" },\n      { name: \"created\", label: \"Created\", type: \"date\", readonly: true },\n      { name: \"updated\", label: \"Updated\", type: \"date\", readonly: true },\n      { name: \"avatar\", label: \"Avatar\", type: \"text\" },\n      { name: \"roles\", label: \"Roles\", type: \"selection\", options: [\"admin\", \"user\", \"guest\"] },\n      { name: \"contact_fk\", label: \"Contact\", type: \"many2one\" },\n      { name: \"company_id\", label: \"Company\", type: \"many2one\" }\n    ];\n    const initialData = ref();\n    const route = useRoute();\n    const router = useRouter();\n    const userId = computed(() => route.params.id);\n    const formTitle = computed(() => userId.value ? \"Update User\" : \"Create User\");\n    const { pb } = usePocketBase();\n    const fetchUserData = async () => {\n      try {\n        if (userId.value) {\n          EventBus.emit(\"loading\", { show: true });\n          const user = await pb.collection(\"internal_users\").getOne(userId.value);\n          console.log(\"user\", user);\n          initialData.value = user;\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        EventBus.emit(\"loading\", { show: false });\n      }\n    };\n    onMounted(() => {\n      fetchUserData();\n    });\n    const handleFormSubmit = async (formData) => {\n      try {\n        if (userId.value) {\n          EventBus.emit(\"loading\", { show: true });\n          await pb.collection(\"internal_users\").update(userId.value, formData);\n        } else {\n          EventBus.emit(\"loading\", { show: true });\n          await pb.collection(\"internal_users\").create(formData);\n        }\n        router.push(\"/user/list\");\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n      } finally {\n        EventBus.emit(\"loading\", { show: false });\n      }\n    };\n    const handleCancel = () => {\n      console.log(\"Cancel clicked\");\n      router.back();\n    };\n    return (_ctx, _cache) => {\n      const _component_NuxtLayout = __nuxt_component_0;\n      return _openBlock(), _createElementBlock(\"div\", null, [\n        _createVNode(_component_NuxtLayout, { name: \"default\" }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_1, [\n              _createVNode(FormView, {\n                title: formTitle.value,\n                fields,\n                initialData: initialData.value,\n                collectionName: \"internal_users\",\n                onSubmit: handleFormSubmit\n              }, {\n                buttons: _withCtx(() => [\n                  _createVNode(ActionButton, {\n                    type: \"button\",\n                    icon: \"fluent:password-reset-48-filled\",\n                    label: \"Psswd\",\n                    onClick: handleCancel\n                  }),\n                  _createVNode(ActionButton, {\n                    type: \"button\",\n                    icon: \"mdi:cloud-refresh\",\n                    label: \"Fetch\",\n                    onClick: fetchUserData\n                  })\n                ]),\n                _: 1\n              }, 8, [\"title\", \"initialData\"])\n            ])\n          ]),\n          _: 1\n        })\n      ]);\n    };\n  }\n});\n",
      "start": 1728383049781,
      "end": 1728383049781,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1728383049781,
      "end": 1728383049782,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1728383049782,
      "end": 1728383049782,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1728383049782,
      "end": 1728383049782,
      "order": "normal"
    }
  ]
}
