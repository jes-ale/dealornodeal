{
  "resolvedId": "/home/jes/dealornodeal_web/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ProseScript',\n  __ssrInlineRender: true,\n  props: {\n  src: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n\nconst isDev = import.meta.dev\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  if (_unref(isDev)) {\n    _push(`<div${_ssrRenderAttrs(_attrs)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n})",
      "start": 1727667734672,
      "end": 1727667734672,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/jes/dealornodeal_web/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"
        ],
        "sourcesContent": [
          "<template>\n  <div v-if=\"isDev\">\n    Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering.\n  </div>\n</template>\n\n<script setup lang=\"ts\">\ndefineProps({\n  src: {\n    type: String,\n    default: ''\n  }\n})\nconst isDev = import.meta.dev\n</script>\n"
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;AAMwB;AAMtB;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;"
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727667734672,
      "end": 1727667734672,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727667734672,
      "end": 1727667734673,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727667734673,
      "end": 1727667734673,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref } from \"vue\";\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ProseScript\",\n  __ssrInlineRender: true,\n  props: {\n    src: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    const isDev = import.meta.dev;\n    return (_ctx, _push, _parent, _attrs) => {\n      if (_unref(isDev)) {\n        _push(`<div${_ssrRenderAttrs(_attrs)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`);\n      } else {\n        _push(`<!---->`);\n      }\n    };\n  }\n});\n",
      "start": 1727667734673,
      "end": 1727667734678,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/jes/dealornodeal_web/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ProseScript',\n  __ssrInlineRender: true,\n  props: {\n  src: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n\nconst isDev = import.meta.dev\n\nreturn (_ctx: any,_push: any,_parent: any,_attrs: any) => {\n  if (_unref(isDev)) {\n    _push(`<div${_ssrRenderAttrs(_attrs)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,cAAc;AAChC,SAAS,kBAAkB,uBAAuB;AAGlD,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,mBAAmB;AAAA,EACnB,OAAO;AAAA,IACP,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACE,MAAM,SAAS;AAGjB,UAAM,QAAQ,YAAY;AAE1B,WAAO,CAAC,MAAU,OAAW,SAAa,WAAgB;AACxD,UAAI,OAAO,KAAK,GAAG;AACjB,cAAM,OAAO,gBAAgB,MAAM,CAAC,oMAAoM;AAAA,MAC1O,OAAO;AACL,cAAM,SAAS;AAAA,MACjB;AAAA,IACF;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1727667734679,
      "end": 1727667734679,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727667734679,
      "end": 1727667734679,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727667734679,
      "end": 1727667734679,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727667734679,
      "end": 1727667734679,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667734680,
      "end": 1727667734680,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667734680,
      "end": 1727667734680,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727667734680,
      "end": 1727667734680,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727667734680,
      "end": 1727667734680,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727667734680,
      "end": 1727667734680,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref } from \"vue\";\nimport { ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ProseScript\",\n  __ssrInlineRender: true,\n  props: {\n    src: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    const isDev = false;\n    return (_ctx, _push, _parent, _attrs) => {\n      if (_unref(isDev)) {\n        _push(`<div${_ssrRenderAttrs(_attrs)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`);\n      } else {\n        _push(`<!---->`);\n      }\n    };\n  }\n});\n",
      "start": 1727667734712,
      "end": 1727667734712,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC;AACllP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1727667734713,
      "end": 1727667734713,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727667734713,
      "end": 1727667734713,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727667734713,
      "end": 1727667734714,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727667734714,
      "end": 1727667734714,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727667734715,
      "end": 1727667734715,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727667734715,
      "end": 1727667734715,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727667734715,
      "end": 1727667734715,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727667734715,
      "end": 1727667734715,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727667734763,
      "end": 1727667734763,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727667734764,
      "end": 1727667734764,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727667734764,
      "end": 1727667734764,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727667734764,
      "end": 1727667734764,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727667734764,
      "end": 1727667734788,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727667734788,
      "end": 1727667734788,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727667734788,
      "end": 1727667734788,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727667734788,
      "end": 1727667734789,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727667734788,
      "end": 1727667734789,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727667734789,
      "end": 1727667734789,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727667734789,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727667734790,
      "end": 1727667734790,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727667734791,
      "end": 1727667734791,
      "order": "normal"
    }
  ]
}
