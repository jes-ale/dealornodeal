{
  "resolvedId": "/home/jes/dealornodeal_web/composables/usePocketBase.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref } from 'vue'\nimport PocketBase from 'pocketbase'\nimport { EventBus } from '~/event-bus.ts';\n\n\nconst pb = new PocketBase('https://db.alejos.dev')\n\nconst isLoggedIn = ref(false)\nconst user = ref<any>(null)\n\nexport const usePocketBase = () => {\n  const start = async () => {\n\n    if (process.client) {\n      function getCookie(name: any) {\n        const value = `; ${document.cookie}`;\n        const parts: any = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n      }\n\n      function setCookie(name: any, value: any, days: any) {\n        const expires = new Date(Date.now() + days * 864e5).toUTCString();\n        const secure = window.location.protocol === 'https:' ? 'Secure;' : '';\n        const sameSite = 'SameSite=Lax;'; // Adjust SameSite attribute as needed\n        document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/; ${secure} ${sameSite}`;\n      }\n\n      function deleteCookie(name: any) {\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n      }\n\n      const storedAuth = getCookie('pb_auth');\n\n      if (storedAuth) {\n        EventBus.emit('loading', { show: true });\n        try {\n          const authData = JSON.parse(decodeURIComponent(storedAuth));\n          pb.authStore.loadFromCookie(authData);\n          if (pb.authStore.isValid) {\n            isLoggedIn.value = true\n            await pb.collection('internal_users').authRefresh();\n            user.value = pb.authStore.model\n          }\n        } catch (e) {\n          console.error('Failed to parse storedAuth:', e);\n        } finally {\n          EventBus.emit('loading', { show: false });\n        }\n      }\n      pb.authStore.onChange(() => {\n        const authData = JSON.stringify(pb.authStore.exportToCookie());\n        setCookie('pb_auth', authData, 7);\n      });\n    }\n  }\n  const login = async (email: string, password: string) => {\n    try {\n      const authData = await pb.collection('internal_users').authWithPassword(email, password)\n      isLoggedIn.value = true\n      user.value = authData.record\n    } catch (error) {\n      isLoggedIn.value = false\n      user.value = null\n      throw error\n    }\n  }\n\n  const logout = async () => {\n    pb.authStore.clear()\n    isLoggedIn.value = false\n    user.value = null\n  }\n\n  return {\n    isLoggedIn,\n    user,\n    login,\n    logout,\n    pb,\n    start\n  }\n}\n\n",
      "start": 1727667734422,
      "end": 1727667734801,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727667734801,
      "end": 1727667734801,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { ref } from \"vue\";\nimport PocketBase from \"pocketbase\";\nimport { EventBus } from \"~/event-bus.ts\";\nconst pb = new PocketBase(\"https://db.alejos.dev\");\nconst isLoggedIn = ref(false);\nconst user = ref(null);\nexport const usePocketBase = () => {\n  const start = async () => {\n    if (process.client) {\n      let getCookie = function(name) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2)\n          return parts.pop().split(\";\").shift();\n      }, setCookie = function(name, value, days) {\n        const expires = new Date(Date.now() + days * 864e5).toUTCString();\n        const secure = window.location.protocol === \"https:\" ? \"Secure;\" : \"\";\n        const sameSite = \"SameSite=Lax;\";\n        document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/; ${secure} ${sameSite}`;\n      }, deleteCookie = function(name) {\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n      };\n      const storedAuth = getCookie(\"pb_auth\");\n      if (storedAuth) {\n        EventBus.emit(\"loading\", { show: true });\n        try {\n          const authData = JSON.parse(decodeURIComponent(storedAuth));\n          pb.authStore.loadFromCookie(authData);\n          if (pb.authStore.isValid) {\n            isLoggedIn.value = true;\n            await pb.collection(\"internal_users\").authRefresh();\n            user.value = pb.authStore.model;\n          }\n        } catch (e) {\n          console.error(\"Failed to parse storedAuth:\", e);\n        } finally {\n          EventBus.emit(\"loading\", { show: false });\n        }\n      }\n      pb.authStore.onChange(() => {\n        const authData = JSON.stringify(pb.authStore.exportToCookie());\n        setCookie(\"pb_auth\", authData, 7);\n      });\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const authData = await pb.collection(\"internal_users\").authWithPassword(email, password);\n      isLoggedIn.value = true;\n      user.value = authData.record;\n    } catch (error) {\n      isLoggedIn.value = false;\n      user.value = null;\n      throw error;\n    }\n  };\n  const logout = async () => {\n    pb.authStore.clear();\n    isLoggedIn.value = false;\n    user.value = null;\n  };\n  return {\n    isLoggedIn,\n    user,\n    login,\n    logout,\n    pb,\n    start\n  };\n};\n",
      "start": 1727667734801,
      "end": 1727667734960,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/jes/dealornodeal_web/composables/usePocketBase.ts"
        ],
        "sourcesContent": [
          "import { ref } from 'vue'\nimport PocketBase from 'pocketbase'\nimport { EventBus } from '~/event-bus.ts';\n\n\nconst pb = new PocketBase('https://db.alejos.dev')\n\nconst isLoggedIn = ref(false)\nconst user = ref<any>(null)\n\nexport const usePocketBase = () => {\n  const start = async () => {\n\n    if (process.client) {\n      function getCookie(name: any) {\n        const value = `; ${document.cookie}`;\n        const parts: any = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n      }\n\n      function setCookie(name: any, value: any, days: any) {\n        const expires = new Date(Date.now() + days * 864e5).toUTCString();\n        const secure = window.location.protocol === 'https:' ? 'Secure;' : '';\n        const sameSite = 'SameSite=Lax;'; // Adjust SameSite attribute as needed\n        document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/; ${secure} ${sameSite}`;\n      }\n\n      function deleteCookie(name: any) {\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n      }\n\n      const storedAuth = getCookie('pb_auth');\n\n      if (storedAuth) {\n        EventBus.emit('loading', { show: true });\n        try {\n          const authData = JSON.parse(decodeURIComponent(storedAuth));\n          pb.authStore.loadFromCookie(authData);\n          if (pb.authStore.isValid) {\n            isLoggedIn.value = true\n            await pb.collection('internal_users').authRefresh();\n            user.value = pb.authStore.model\n          }\n        } catch (e) {\n          console.error('Failed to parse storedAuth:', e);\n        } finally {\n          EventBus.emit('loading', { show: false });\n        }\n      }\n      pb.authStore.onChange(() => {\n        const authData = JSON.stringify(pb.authStore.exportToCookie());\n        setCookie('pb_auth', authData, 7);\n      });\n    }\n  }\n  const login = async (email: string, password: string) => {\n    try {\n      const authData = await pb.collection('internal_users').authWithPassword(email, password)\n      isLoggedIn.value = true\n      user.value = authData.record\n    } catch (error) {\n      isLoggedIn.value = false\n      user.value = null\n      throw error\n    }\n  }\n\n  const logout = async () => {\n    pb.authStore.clear()\n    isLoggedIn.value = false\n    user.value = null\n  }\n\n  return {\n    isLoggedIn,\n    user,\n    login,\n    logout,\n    pb,\n    start\n  }\n}\n\n"
        ],
        "mappings": "AAAA,SAAS,WAAW;AACpB,OAAO,gBAAgB;AACvB,SAAS,gBAAgB;AAGzB,MAAM,KAAK,IAAI,WAAW,uBAAuB;AAEjD,MAAM,aAAa,IAAI,KAAK;AAC5B,MAAM,OAAO,IAAS,IAAI;AAEnB,aAAM,gBAAgB,MAAM;AACjC,QAAM,QAAQ,YAAY;AAExB,QAAI,QAAQ,QAAQ;AAClB,UAAS,YAAT,SAAmB,MAAW;AAC5B,cAAM,QAAQ,KAAK,SAAS,MAAM;AAClC,cAAM,QAAa,MAAM,MAAM,KAAK,IAAI,GAAG;AAC3C,YAAI,MAAM,WAAW;AAAG,iBAAO,MAAM,IAAI,EAAE,MAAM,GAAG,EAAE,MAAM;AAAA,MAC9D,GAES,YAAT,SAAmB,MAAW,OAAY,MAAW;AACnD,cAAM,UAAU,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,EAAE,YAAY;AAChE,cAAM,SAAS,OAAO,SAAS,aAAa,WAAW,YAAY;AACnE,cAAM,WAAW;AACjB,iBAAS,SAAS,GAAG,IAAI,IAAI,mBAAmB,KAAK,CAAC,aAAa,OAAO,aAAa,MAAM,IAAI,QAAQ;AAAA,MAC3G,GAES,eAAT,SAAsB,MAAW;AAC/B,iBAAS,SAAS,GAAG,IAAI;AAAA,MAC3B;AAEA,YAAM,aAAa,UAAU,SAAS;AAEtC,UAAI,YAAY;AACd,iBAAS,KAAK,WAAW,EAAE,MAAM,KAAK,CAAC;AACvC,YAAI;AACF,gBAAM,WAAW,KAAK,MAAM,mBAAmB,UAAU,CAAC;AAC1D,aAAG,UAAU,eAAe,QAAQ;AACpC,cAAI,GAAG,UAAU,SAAS;AACxB,uBAAW,QAAQ;AACnB,kBAAM,GAAG,WAAW,gBAAgB,EAAE,YAAY;AAClD,iBAAK,QAAQ,GAAG,UAAU;AAAA,UAC5B;AAAA,QACF,SAAS,GAAG;AACV,kBAAQ,MAAM,+BAA+B,CAAC;AAAA,QAChD,UAAE;AACA,mBAAS,KAAK,WAAW,EAAE,MAAM,MAAM,CAAC;AAAA,QAC1C;AAAA,MACF;AACA,SAAG,UAAU,SAAS,MAAM;AAC1B,cAAM,WAAW,KAAK,UAAU,GAAG,UAAU,eAAe,CAAC;AAC7D,kBAAU,WAAW,UAAU,CAAC;AAAA,MAClC,CAAC;AAAA,IACH;AAAA,EACF;AACA,QAAM,QAAQ,OAAO,OAAe,aAAqB;AACvD,QAAI;AACF,YAAM,WAAW,MAAM,GAAG,WAAW,gBAAgB,EAAE,iBAAiB,OAAO,QAAQ;AACvF,iBAAW,QAAQ;AACnB,WAAK,QAAQ,SAAS;AAAA,IACxB,SAAS,OAAO;AACd,iBAAW,QAAQ;AACnB,WAAK,QAAQ;AACb,YAAM;AAAA,IACR;AAAA,EACF;AAEA,QAAM,SAAS,YAAY;AACzB,OAAG,UAAU,MAAM;AACnB,eAAW,QAAQ;AACnB,SAAK,QAAQ;AAAA,EACf;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727667734961,
      "end": 1727667734961,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727667734962,
      "end": 1727667734962,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727667734962,
      "end": 1727667734962,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { ref } from \"vue\";\nimport PocketBase from \"pocketbase\";\nimport { EventBus } from \"~/event-bus.ts\";\nconst pb = new PocketBase(\"https://db.alejos.dev\");\nconst isLoggedIn = ref(false);\nconst user = ref(null);\nexport const usePocketBase = () => {\n  const start = async () => {\n    if (false) {\n      let getCookie = function(name) {\n        const value = `; ${(void 0).cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2)\n          return parts.pop().split(\";\").shift();\n      }, setCookie = function(name, value, days) {\n        const expires = new Date(Date.now() + days * 864e5).toUTCString();\n        const secure = (void 0).location.protocol === \"https:\" ? \"Secure;\" : \"\";\n        const sameSite = \"SameSite=Lax;\";\n        (void 0).cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/; ${secure} ${sameSite}`;\n      }, deleteCookie = function(name) {\n        (void 0).cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n      };\n      const storedAuth = getCookie(\"pb_auth\");\n      if (storedAuth) {\n        EventBus.emit(\"loading\", { show: true });\n        try {\n          const authData = JSON.parse(decodeURIComponent(storedAuth));\n          pb.authStore.loadFromCookie(authData);\n          if (pb.authStore.isValid) {\n            isLoggedIn.value = true;\n            await pb.collection(\"internal_users\").authRefresh();\n            user.value = pb.authStore.model;\n          }\n        } catch (e) {\n          console.error(\"Failed to parse storedAuth:\", e);\n        } finally {\n          EventBus.emit(\"loading\", { show: false });\n        }\n      }\n      pb.authStore.onChange(() => {\n        const authData = JSON.stringify(pb.authStore.exportToCookie());\n        setCookie(\"pb_auth\", authData, 7);\n      });\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const authData = await pb.collection(\"internal_users\").authWithPassword(email, password);\n      isLoggedIn.value = true;\n      user.value = authData.record;\n    } catch (error) {\n      isLoggedIn.value = false;\n      user.value = null;\n      throw error;\n    }\n  };\n  const logout = async () => {\n    pb.authStore.clear();\n    isLoggedIn.value = false;\n    user.value = null;\n  };\n  return {\n    isLoggedIn,\n    user,\n    login,\n    logout,\n    pb,\n    start\n  };\n};\n",
      "start": 1727667734962,
      "end": 1727667735154,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/home/jes/dealornodeal_web/composables/usePocketBase.ts\"],\n  \"sourcesContent\": [\"import { ref } from \\\"vue\\\";\\nimport PocketBase from \\\"pocketbase\\\";\\nimport { EventBus } from \\\"~/event-bus.ts\\\";\\nconst pb = new PocketBase(\\\"https://db.alejos.dev\\\");\\nconst isLoggedIn = ref(false);\\nconst user = ref(null);\\nexport const usePocketBase = () => {\\n  const start = async () => {\\n    if (process.client) {\\n      let getCookie = function(name) {\\n        const value = `; ${document.cookie}`;\\n        const parts = value.split(`; ${name}=`);\\n        if (parts.length === 2)\\n          return parts.pop().split(\\\";\\\").shift();\\n      }, setCookie = function(name, value, days) {\\n        const expires = new Date(Date.now() + days * 864e5).toUTCString();\\n        const secure = window.location.protocol === \\\"https:\\\" ? \\\"Secure;\\\" : \\\"\\\";\\n        const sameSite = \\\"SameSite=Lax;\\\";\\n        document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/; ${secure} ${sameSite}`;\\n      }, deleteCookie = function(name) {\\n        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\\n      };\\n      const storedAuth = getCookie(\\\"pb_auth\\\");\\n      if (storedAuth) {\\n        EventBus.emit(\\\"loading\\\", { show: true });\\n        try {\\n          const authData = JSON.parse(decodeURIComponent(storedAuth));\\n          pb.authStore.loadFromCookie(authData);\\n          if (pb.authStore.isValid) {\\n            isLoggedIn.value = true;\\n            await pb.collection(\\\"internal_users\\\").authRefresh();\\n            user.value = pb.authStore.model;\\n          }\\n        } catch (e) {\\n          console.error(\\\"Failed to parse storedAuth:\\\", e);\\n        } finally {\\n          EventBus.emit(\\\"loading\\\", { show: false });\\n        }\\n      }\\n      pb.authStore.onChange(() => {\\n        const authData = JSON.stringify(pb.authStore.exportToCookie());\\n        setCookie(\\\"pb_auth\\\", authData, 7);\\n      });\\n    }\\n  };\\n  const login = async (email, password) => {\\n    try {\\n      const authData = await pb.collection(\\\"internal_users\\\").authWithPassword(email, password);\\n      isLoggedIn.value = true;\\n      user.value = authData.record;\\n    } catch (error) {\\n      isLoggedIn.value = false;\\n      user.value = null;\\n      throw error;\\n    }\\n  };\\n  const logout = async () => {\\n    pb.authStore.clear();\\n    isLoggedIn.value = false;\\n    user.value = null;\\n  };\\n  return {\\n    isLoggedIn,\\n    user,\\n    login,\\n    logout,\\n    pb,\\n    start\\n  };\\n};\\n\"],\n  \"mappings\": \"AAAA,SAAS,WAAW;AACpB,OAAO,gBAAgB;AACvB,SAAS,gBAAgB;AACzB,MAAM,KAAK,IAAI,WAAW,uBAAuB;AACjD,MAAM,aAAa,IAAI,KAAK;AAC5B,MAAM,OAAO,IAAI,IAAI;AACd,aAAM,gBAAgB,MAAM;AACjC,QAAM,QAAQ,YAAY;AACxB,QAAI,OAAgB;AAClB,UAAI,YAAY,SAAS,MAAM;AAC7B,cAAM,QAAQ,KAAK,SAAS,MAAM;AAClC,cAAM,QAAQ,MAAM,MAAM,KAAK,IAAI,GAAG;AACtC,YAAI,MAAM,WAAW;AACnB,iBAAO,MAAM,IAAI,EAAE,MAAM,GAAG,EAAE,MAAM;AAAA,MACxC,GAAG,YAAY,SAAS,MAAM,OAAO,MAAM;AACzC,cAAM,UAAU,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,EAAE,YAAY;AAChE,cAAM,SAAS,SAAO,SAAS,aAAa,WAAW,YAAY;AACnE,cAAM,WAAW;AACjB,iBAAS,SAAS,GAAG,IAAI,IAAI,mBAAmB,KAAK,CAAC,aAAa,OAAO,aAAa,MAAM,IAAI,QAAQ;AAAA,MAC3G,GAAG,eAAe,SAAS,MAAM;AAC/B,iBAAS,SAAS,GAAG,IAAI;AAAA,MAC3B;AACA,YAAM,aAAa,UAAU,SAAS;AACtC,UAAI,YAAY;AACd,iBAAS,KAAK,WAAW,EAAE,MAAM,KAAK,CAAC;AACvC,YAAI;AACF,gBAAM,WAAW,KAAK,MAAM,mBAAmB,UAAU,CAAC;AAC1D,aAAG,UAAU,eAAe,QAAQ;AACpC,cAAI,GAAG,UAAU,SAAS;AACxB,uBAAW,QAAQ;AACnB,kBAAM,GAAG,WAAW,gBAAgB,EAAE,YAAY;AAClD,iBAAK,QAAQ,GAAG,UAAU;AAAA,UAC5B;AAAA,QACF,SAAS,GAAG;AACV,kBAAQ,MAAM,+BAA+B,CAAC;AAAA,QAChD,UAAE;AACA,mBAAS,KAAK,WAAW,EAAE,MAAM,MAAM,CAAC;AAAA,QAC1C;AAAA,MACF;AACA,SAAG,UAAU,SAAS,MAAM;AAC1B,cAAM,WAAW,KAAK,UAAU,GAAG,UAAU,eAAe,CAAC;AAC7D,kBAAU,WAAW,UAAU,CAAC;AAAA,MAClC,CAAC;AAAA,IACH;AAAA,EACF;AACA,QAAM,QAAQ,OAAO,OAAO,aAAa;AACvC,QAAI;AACF,YAAM,WAAW,MAAM,GAAG,WAAW,gBAAgB,EAAE,iBAAiB,OAAO,QAAQ;AACvF,iBAAW,QAAQ;AACnB,WAAK,QAAQ,SAAS;AAAA,IACxB,SAAS,OAAO;AACd,iBAAW,QAAQ;AACnB,WAAK,QAAQ;AACb,YAAM;AAAA,IACR;AAAA,EACF;AACA,QAAM,SAAS,YAAY;AACzB,OAAG,UAAU,MAAM;AACnB,eAAW,QAAQ;AACnB,SAAK,QAAQ;AAAA,EACf;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1727667735154,
      "end": 1727667735154,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727667735154,
      "end": 1727667735154,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727667735154,
      "end": 1727667735154,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727667735154,
      "end": 1727667735154,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727667735154,
      "end": 1727667735155,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727667735155,
      "end": 1727667735155,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727667735155,
      "end": 1727667735158,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727667735155,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727667735159,
      "end": 1727667735159,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727667735160,
      "end": 1727667735160,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727667735160,
      "end": 1727667735160,
      "order": "normal"
    }
  ]
}
