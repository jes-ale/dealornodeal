{"version":3,"file":"index-CupGJ-SV.js","sources":["../../../../pages/user/form/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport FormView from '~/components/Views/FormView.vue';\nimport Header from '~/components/Blocks/Header.vue';\nimport ActionButton from '~/components/Blocks/ActionButton.vue';\nimport { usePocketBase } from '~/composables/usePocketBase'; // Assuming this is where you import PocketBase\nimport { EventBus } from '~/event-bus'; // Assuming this is your event bus setup\n\ninterface Field {\n  name: string;\n  label: string;\n  type: string;\n  options?: string[];\n  readonly?: boolean;\n}\n\nconst fields: Field[] = [\n  { name: 'username', label: 'Username', type: 'text' },\n  { name: 'verified', label: 'Verified', type: 'boolean' },\n  { name: 'email', label: 'Email', type: 'text' },\n  { name: 'created', label: 'Created', type: 'date', readonly: true },\n  { name: 'updated', label: 'Updated', type: 'date', readonly: true },\n  { name: 'avatar', label: 'Avatar', type: 'text' },\n  { name: 'roles', label: 'Roles', type: 'selection', options: ['admin', 'user', 'guest'] },\n  { name: 'contact_fk', label: 'Contact', type: 'many2one' },\n  { name: 'company_id', label: 'Company', type: 'many2one' },\n];\n\nconst initialData = ref<Record<string, any>>({});\nconst route = useRoute();\nconst router = useRouter();\nconst userId = computed(() => route.params.id as string | undefined);\n\nconst formTitle = computed(() => (userId.value ? 'Update User' : 'Create User'));\n\nconst { pb } = usePocketBase(); // Initialize your PocketBase instance\n\nconst fetchUserData = async () => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      const user = await pb.collection('internal_users').getOne(userId.value);\n      initialData.value = user;\n    }\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nonMounted(() => {\n  fetchUserData();\n});\n\nconst handleFormSubmit = async (formData: Record<string, any>) => {\n  try {\n    if (userId.value) {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').update(userId.value, formData);\n    } else {\n      EventBus.emit('loading', { show: true }); // Trigger global loading indicator\n      await pb.collection('internal_users').create(formData);\n    }\n    router.push('/user/list'); // Redirect to user list or appropriate page\n  } catch (error) {\n    console.error('Error submitting form:', error);\n  } finally {\n    EventBus.emit('loading', { show: false }); // Hide global loading indicator\n  }\n};\n\nconst handleCancel = () => {\n  console.log('Cancel clicked');\n  router.back(); // Navigate back to the previous page\n};\n</script>\n\n<template>\n  <div>\n    <NuxtLayout name=\"default\">\n      <div class=\"w-full h-full flex items-center justify-center\">\n        <FormView v-if=\"!loading\" :title=\"formTitle\" :fields=\"fields\" :initialData=\"initialData\"\n          collectionName=\"internal_users\" @submit=\"handleFormSubmit\">\n          <template #buttons>\n            <ActionButton type=\"button\" icon=\"fluent:password-reset-48-filled\" label=\"Psswd\" @click=\"handleCancel\" />\n          </template>\n        </FormView>\n        <div v-else>Loading...</div>\n      </div>\n    </NuxtLayout>\n  </div>\n</template>\n\n\n<style scoped></style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,UAAM,SAAkB;AAAA,MACtB,EAAE,MAAM,YAAY,OAAO,YAAY,MAAM,OAAO;AAAA,MACpD,EAAE,MAAM,YAAY,OAAO,YAAY,MAAM,UAAU;AAAA,MACvD,EAAE,MAAM,SAAS,OAAO,SAAS,MAAM,OAAO;AAAA,MAC9C,EAAE,MAAM,WAAW,OAAO,WAAW,MAAM,QAAQ,UAAU,KAAK;AAAA,MAClE,EAAE,MAAM,WAAW,OAAO,WAAW,MAAM,QAAQ,UAAU,KAAK;AAAA,MAClE,EAAE,MAAM,UAAU,OAAO,UAAU,MAAM,OAAO;AAAA,MAChD,EAAE,MAAM,SAAS,OAAO,SAAS,MAAM,aAAa,SAAS,CAAC,SAAS,QAAQ,OAAO,EAAE;AAAA,MACxF,EAAE,MAAM,cAAc,OAAO,WAAW,MAAM,WAAW;AAAA,MACzD,EAAE,MAAM,cAAc,OAAO,WAAW,MAAM,WAAW;AAAA,IAAA;AAGrD,UAAA,cAAc,IAAyB,CAAA,CAAE;AAC/C,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,SAAS,SAAS,MAAM,MAAM,OAAO,EAAwB;AAEnE,UAAM,YAAY,SAAS,MAAO,OAAO,QAAQ,gBAAgB,aAAc;AAEzE,UAAA,EAAE,OAAO;AAoBT,UAAA,mBAAmB,OAAO,aAAkC;AAC5D,UAAA;AACF,YAAI,OAAO,OAAO;AAChB,mBAAS,KAAK,WAAW,EAAE,MAAM,KAAM,CAAA;AACvC,gBAAM,GAAG,WAAW,gBAAgB,EAAE,OAAO,OAAO,OAAO,QAAQ;AAAA,QAAA,OAC9D;AACL,mBAAS,KAAK,WAAW,EAAE,MAAM,KAAM,CAAA;AACvC,gBAAM,GAAG,WAAW,gBAAgB,EAAE,OAAO,QAAQ;AAAA,QACvD;AACA,eAAO,KAAK,YAAY;AAAA,eACjB,OAAO;AACN,gBAAA,MAAM,0BAA0B,KAAK;AAAA,MAAA,UAC7C;AACA,iBAAS,KAAK,WAAW,EAAE,MAAM,MAAO,CAAA;AAAA,MAC1C;AAAA,IAAA;AAGF,UAAM,eAAe,MAAM;AACzB,cAAQ,IAAI,gBAAgB;AAC5B,aAAO,KAAK;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}